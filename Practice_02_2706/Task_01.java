// üìå –î–∞–Ω–æ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ N (>0) –∏ —Å–∏–º–≤–æ–ª—ã c1 –∏ c2.
// üìå –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–ª–∏–Ω—ã N, –∫–æ—Ç–æ—Ä–∞—è
// —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–µ—Ä–µ–¥—É—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤ c1 –∏ c2, –Ω–∞—á–∏–Ω–∞—è —Å c1.

package Practice_02_2706;

public class Task_01 {
    public static void main(String[] args) {
        
        
        // System.out.println(alteratingChars(5, 'A', 'B'));
        System.out.println(alteratingCharsForString(5, 'A', 'B'));
        
    }

    public static String alteratingChars(int n, char c1, char c2){
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < n / 2; i++){
            sb.append(c1);
            sb.append(c2);
        }
        if(n%2==1) sb.append(c1);
        return sb.toString();
    }

    public static String alteratingCharsForString(int n, char c1, char c2){
        String result = "";
        for(int i = 0; i < n / 2; i++){
            result+= String.valueOf(c1) + String.valueOf(c2) ;
        }
        if(n%2==1) result += String.valueOf(c1);
        return result;
    }
}
